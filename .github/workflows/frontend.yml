name: CI + Deploy Frontend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

concurrency:
  group: ci-frontend-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write # requerido para OIDC

jobs:
  build-test:
    name: Build & Test (Node 20, Vite)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Commitlint (Conventional Commits)
        if: ${{ github.event_name == 'pull_request' || github.ref_name == 'main' }}
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: './commitlint.config.cjs'

      - name: Run Lint & Format Check
        run: |
          npm run lint
          npm run format:check

      - name: Test (skip if no script)
        run: npm run -s test --if-present

      - name: Build
        env:
          # Variables VITE_* definidas en GitHub → Settings → Variables
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          NODE_OPTIONS: --max_old_space_size=4096
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/**
          if-no-files-found: error

  deploy:
    name: Deploy to S3 + Invalidate CloudFront
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref_name == 'main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      # --- AWS authentication via OIDC ---
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-frontend-deploy

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      # --- Deploy ---
      - name: Sync assets (long cache)
        run: |
          aws s3 sync dist s3://${{ vars.S3_BUCKET }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public, max-age=31536000, immutable" \
            --only-show-errors

      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp dist/index.html s3://${{ vars.S3_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html; charset=utf-8" \
            --only-show-errors

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Done
        if: success()
        run: echo "✅ Frontend deployed successfully to S3 and CloudFront."
